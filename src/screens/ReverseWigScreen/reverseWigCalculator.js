
export const calculateCoords = (a, b, c) => {
  let latVorz = 0;
  let longVorz = 0;
  let longKomp = 0;
  let latKomp = 0;

  switch ((a % 1000 - a % 100) / 100) {
    case 1:
      latVorz = 1;
      longVorz = 1;
      break;
    case 2:
      latVorz = -1;
      longVorz = -1;
      break;
    case 3:
      latVorz = 1;
      longVorz = -1;
      break;
    case 4:
      latVorz = -1;
      longVorz = -1;
      break;
    default:
  }

  if (((c % 100000 - c % 10000) / 10000 + (c % 100 - c % 10) / 10) % 2 == 0) {
    latKomp = latVorz * ((a % 10000 - a % 1000) * 10E-3/*/ 100*/ + (b % 100 - b % 10) / 10 + (b % 100000 - b % 10000) /*/ 100000      */* 10E-6 + (c % 1000 - c % 100) /*/ 10000      */* 10E-5 + (a % 1000000 - a % 100000) /*/ 100000000*/* 10E-9 + (c % 100 - c % 10) /*/ 100000*/* 10E-6 + a % 10 * 1.0E-5);
  } else {
    latKomp = latVorz * ((b % 1000000 - b % 100000) /*/ 10000*/ * 10E-5 + a % 10 + (a % 10000 - a % 1000) /*/ 10000*/* 10E-5 + (c % 1000000 - c % 100000) /*/ 10000000*/ * 10E-8 + (c % 1000 - c % 100)/* / 100000*/ * 10E-6 + (c % 100 - c % 10) /*/ 100000*/ * 10E-6 + (a % 1000000 - a % 100000) /*/ 10000000000*/ * 10E-11);
  }
  if (((c % 100000 - c % 10000) / 10000 + (c % 100 - c % 10) / 10) % 2 == 0) {
    longKomp = longVorz * ((a % 100000 - a % 10000) /*/ 100*/ * 10E-3 + (c % 1000000 - c % 100000) /*/ 10000*/ * 10E-5 + c % 10 + (b % 1000 - b % 100) /*/ 1000*/ * 10E-4 + (b % 1000000 - b % 100000) /*/ 10000000*/ * 10E-8 + (a % 100 - a % 10) /*/ 10000*/ * 10E-5 + (c % 100000 - c % 10000) /*/ 100000000*/ * 10E-9 + b % 10 * 1.0E-5);
  } else {
    longKomp = longVorz * ((b % 100 - b % 10) * 10 + c % 10 * 10 + (a % 100 - a % 10) /*/ 10*/ * 10E-2 + (a % 100000 - a % 10000) /*/ 100000*/ * 10E-6 + (b % 1000 - b % 100)/* / 10000*/ * 10E-5 + b % 10 * /*0.001*/ 10E-4 + (c % 100000 - c % 10000) /*/ 100000000*/ * 10E-9 + (b % 100000 - b % 10000) /*/ 1000000000*/ * 10E-10);
  }
  return [latKomp, longKomp]
};